# This file belongs to zfs-backup-manager

# This file was shipped with version 0.0.2
# If you experience problems after an update, check for missing values

# ===== Config Options =====

# The naming pattern to look for when finding snapshots to backup.
# The pattern does not need to be sortable, as snapshot creation time is used for ordering.
SNAPSHOT_PATTERN="zfs-auto-snap_daily"

# This property must be present with the correct value on a dataset for it to be backed up.
# To stop backing up a dataset, simply remove this property or set to "off".
# Valid values are "path", "nested", and "root"
# path   - Creates a path of datasets on the destination that matches the source.
#          The pool name is stripped from the path.
#          e.g. With "c" having the "path" mode:
#          /sourcepool/a/b/c backs up to /backuppool/a/b/c
# nested - Nests the dataset on the destination pool within a dataset set by the
#          NEST_NAME_PROPERTY, preserving the rest of the path as in the "path" option.
#          The pool name is not stripped from the path. The nested dataset must already exist.
#          e.g. With the nested name set to "nest" and "sourcepool" having the "nested" mode:
#          /sourcepool/a/b/c backs up to /backuppool/nest/sourcepool/a/b/c
# root   - Special handling for root filesystems. Performs a backup similar to
#          the "nested" mode, however all mountpoints are set to "none" during the receive.
#          The pool name is not stripped from the path. The nested dataset must already exist.
#          e.g. With the nested name set to "system1" and "rootpool" having the "root" mode:
#          /rootpool/a/b/c backs up to /backuppool/system1/rootpool/a/b/c
# off    - The dataset will not be backed up.
MODE_PROPERTY="furneaux:autobackup"

# The property which contains the name to nest the dataset under on the destination pool.
# Only needs to be set if one or more datasets have the "nested" or "root" modes.
NEST_NAME_PROPERTY="furneaux:backupnestname"

# The property which contains additional dataset property overrides to pass to ZFS receive on the destination.
# e.g. To set the property "com.sun:auto-snapshot" to "false" on the destination, set this
# property value to "-o com.sun:auto-snapshot=false".
ZFS_RECV_OPTIONS_PROPERTY="furneaux:backupopts"

# Pool on the destination for backups to be received into.
REMOTE_POOL="btank"

# Backup machine hostname. Set to "" for backups on the same machine.
REMOTE_HOST="darwin"

# User on the remote destination machine. Need not be set unless REMOTE_HOST is set.
# There must be an SSH key already installed for passwordless authentication into this account.
# This user must also have the rights to run ZFS commands via sudo without password authentication.
# If using root, sudo is not used.
REMOTE_USER="root"

# How to transfer data over the network. Set to either "ssh" or "mbuffer".
# mbuffer uses raw TCP with buffers on either side and is therefore much faster.
# However mbuffer is not encrypted and as such should only be used on local networks.
# mbuffer still requires SSH for remote system login.
REMOTE_MODE="mbuffer"

# The size of the blocks of data sent by mbuffer. It is usually best to set this the same as the
# ZFS recordsize. Use "auto" to set this automatically to the recordsize per dataset.
MBUFFER_BLOCK_SIZE="auto"

# Port for mbuffer to bind to when receiving data.
MBUFFER_PORT="9090"

# Size of mbuffer's memory buffer on the sending and receiving side.
MBUFFER_BUFF_SIZE="1G"

# Options for the ssh session used during send/receive.
SSH_OPTIONS="-o Ciphers=arcfour"

# ===== End of Common Config Options =====

# These settings should only be changed if you have a very strange system
LOCK_FILE="/var/run/zfs-backup-manager.lock"
ZFS_CMD="/sbin/zfs"
SSH_CMD="/usr/bin/ssh"
MBUFFER_CMD="/usr/bin/mbuffer"
REMOTE_ZFS_CMD="$ZFS_CMD"
